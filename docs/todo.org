#+STARTUP: content indent
#+title: Genie - Todo
* Reflective access warning
When creating an uberjar, a warning is shown:
#+begin_src bash :tangle yes
$ lein uberjar
Compiling genied.classloader
Compiling genied.client
Compiling genied.core
Compiling genied.diagnostics
Compiling genied.state
Compiling genied.util
Created /home/nico/cljlib/genie/genied/target/uberjar/genied-0.1.0-SNAPSHOT.jar
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by clojure.lang.InjectedInvoker/0x0000000840065840 to method com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)
WARNING: Please consider reporting this to the maintainers of clojure.lang.InjectedInvoker/0x0000000840065840
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Created /home/nico/cljlib/genie/genied/target/uberjar/genied-0.1.0-SNAPSHOT-standalone.jar
#+end_src

This probably has something to do with Pomegranate, but further investigation is needed.
* Support Inlein style dependencies
In [[http://inlein.org/][Inlein]] scripts the depencies are contained in the script itself, not in a separate deps.edn file. It might be nice to support this as well.
* Other Repl implementations
nRepl is very versatile, with great support for sessions and stream-handling. But maybe simpler repl's are faster and/or easier.
* Other wire protocols
Use bencode over TCP/IP now. Maybe local unix sockets are faster.
* Other clients
Babashka works very well here, but it is a binary of 80MB. Some possible alternatives:
- Tcl with rep(.exe) - the first implementation. This works, but a 2-process overhead is less than ideal.
- Tcl with bencode (or other protocl)
- A C implementation (maybe using rep as inspiration)
- A better C, such as Go or Rust.
